<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-13T11:18:50 CET" name="Loan Department" finished-at="2023-03-13T11:18:50 CET" duration-ms="50">
    <groups>
      <group name="Smoke">
        <method signature="Day2.Ploan()[pri:0, instance:test.Day2@247d8ae]" name="Ploan" class="test.Day2"/>
        <method signature="Day4.MobileLoginHomeLoan()[pri:0, instance:test.Day4@48974e45]" name="MobileLoginHomeLoan" class="test.Day4"/>
        <method signature="Day3.MobileLoginCarLoan()[pri:0, instance:test.Day3@618425b5]" name="MobileLoginCarLoan" class="test.Day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-03-13T11:18:50 CET" name="Car Loan" finished-at="2023-03-13T11:18:50 CET" duration-ms="50">
      <class name="test.Day1">
        <test-method is-config="true" signature="AfSuite()[pri:0, instance:test.Day1@306f16f3]" started-at="2023-03-13T11:18:50 CET" name="AfSuite" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- test.Day1 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="BfSuite()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="BfSuite" finished-at="2023-03-13T11:18:50 CET" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfSuite -->
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="BeforeClass" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method is-config="true" signature="BeforeEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="BeforeEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEvery -->
        <test-method signature="MobileLoginCarLoan()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="MobileLoginCarLoan" finished-at="2023-03-13T11:18:50 CET" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method is-config="true" signature="AFterEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="AFterEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AFterEvery -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="MobileSignOutCarLoan" data-provider="GetData" finished-at="2023-03-13T11:18:50 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FirstSetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FirtsPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="BeforeEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="BeforeEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEvery -->
        <test-method is-config="true" signature="AFterEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="AFterEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AFterEvery -->
        <test-method is-config="true" signature="BeforeEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="BeforeEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEvery -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="MobileSignOutCarLoan" data-provider="GetData" finished-at="2023-03-13T11:18:50 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SecondSetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SecondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="BeforeEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="BeforeEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEvery -->
        <test-method signature="MobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="MobileSignOutCarLoan" data-provider="GetData" finished-at="2023-03-13T11:18:50 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ThirdSetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThirdSPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSignOutCarLoan -->
        <test-method is-config="true" signature="AFterEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="AFterEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AFterEvery -->
        <test-method is-config="true" signature="BeforeEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="BeforeEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeEvery -->
        <test-method is-config="true" signature="AFterEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="AFterEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AFterEvery -->
        <test-method signature="WebLoginCarLoan(java.lang.String,int)[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="WebLoginCarLoan" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234567]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarLoan -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="AfterClass" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="AFterEvery()[pri:0, instance:test.Day3@618425b5]" started-at="2023-03-13T11:18:50 CET" name="AFterEvery" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AFterEvery -->
      </class> <!-- test.Day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2023-03-13T11:18:50 CET" name="Personal loan" finished-at="2023-03-13T11:18:50 CET" duration-ms="50">
      <class name="test.Day1">
        <test-method signature="Demo()[pri:0, instance:test.Day1@306f16f3]" started-at="2023-03-13T11:18:50 CET" name="Demo" finished-at="2023-03-13T11:18:50 CET" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.Demo(Day1.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="Lastexecution()[pri:0, instance:test.Day1@306f16f3]" started-at="2023-03-13T11:18:50 CET" name="Lastexecution" finished-at="2023-03-13T11:18:50 CET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Lastexecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="Prerequeste()[pri:0, instance:test.Day2@247d8ae]" started-at="2023-03-13T11:18:50 CET" name="Prerequeste" finished-at="2023-03-13T11:18:50 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Prerequeste -->
        <test-method signature="Ploan()[pri:0, instance:test.Day2@247d8ae]" started-at="2023-03-13T11:18:50 CET" name="Ploan" finished-at="2023-03-13T11:18:50 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ploan -->
      </class> <!-- test.Day2 -->
      <class name="test.Day4">
        <test-method signature="LoginApiHomeLoan()[pri:0, instance:test.Day4@48974e45]" started-at="2023-03-13T11:18:50 CET" name="LoginApiHomeLoan" finished-at="2023-03-13T11:18:50 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginApiHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.Day4@48974e45]" started-at="2023-03-13T11:18:50 CET" name="MobileLoginHomeLoan" finished-at="2023-03-13T11:18:50 CET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="WebLoginHomeLoan(java.lang.String)[pri:0, instance:test.Day4@48974e45]" started-at="2023-03-13T11:18:50 CET" name="WebLoginHomeLoan" finished-at="2023-03-13T11:18:50 CET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personaloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal loan -->
  </suite> <!-- Loan Department -->
</testng-results>
